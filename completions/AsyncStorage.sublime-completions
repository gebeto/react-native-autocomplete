{
    "comment": "React Native AsyncStorage", 
    "scope": "source.js, source.jsx", 
    "completions": [
        {
            "trigger": "AsyncStorage.getItem(key: string, callback?: ?(error: ?Error, result: ?string) => void)", 
            "contents": "AsyncStorage.getItem(key: string, callback?: ?(error: ?Error, result: ?string) => void)"
        }, 
        {
            "trigger": "AsyncStorage.setItem(key: string, value: string, callback?: ?(error: ?Error) => void)", 
            "contents": "AsyncStorage.setItem(key: string, value: string, callback?: ?(error: ?Error) => void)"
        }, 
        {
            "trigger": "AsyncStorage.removeItem(key: string, callback?: ?(error: ?Error) => void)", 
            "contents": "AsyncStorage.removeItem(key: string, callback?: ?(error: ?Error) => void)"
        }, 
        {
            "trigger": "AsyncStorage.mergeItem(key: string, value: string, callback?: ?(error: ?Error) => void)", 
            "contents": "AsyncStorage.mergeItem(key: string, value: string, callback?: ?(error: ?Error) => void)"
        }, 
        {
            "trigger": "AsyncStorage.clear(callback?: ?(error: ?Error) => void)", 
            "contents": "AsyncStorage.clear(callback?: ?(error: ?Error) => void)"
        }, 
        {
            "trigger": "AsyncStorage.getAllKeys(callback?: ?(error: ?Error, keys: ?Array<string>) => void)", 
            "contents": "AsyncStorage.getAllKeys(callback?: ?(error: ?Error, keys: ?Array<string>) => void)"
        }, 
        {
            "trigger": "AsyncStorage.flushGetRequests()", 
            "contents": "AsyncStorage.flushGetRequests()"
        }, 
        {
            "trigger": "AsyncStorage.multiGet(keys: Array<string>, callback?: ?(errors: ?Array<Error>, result: ?Array<Array<string>>) => void)", 
            "contents": "AsyncStorage.multiGet(keys: Array<string>, callback?: ?(errors: ?Array<Error>, result: ?Array<Array<string>>) => void)"
        }, 
        {
            "trigger": "AsyncStorage.multiSet(keyValuePairs: Array<Array<string>>, callback?: ?(errors: ?Array<Error>) => void)", 
            "contents": "AsyncStorage.multiSet(keyValuePairs: Array<Array<string>>, callback?: ?(errors: ?Array<Error>) => void)"
        }, 
        {
            "trigger": "AsyncStorage.multiRemove(keys: Array<string>, callback?: ?(errors: ?Array<Error>) => void)", 
            "contents": "AsyncStorage.multiRemove(keys: Array<string>, callback?: ?(errors: ?Array<Error>) => void)"
        }, 
        {
            "trigger": "AsyncStorage.multiMerge(keyValuePairs: Array<Array<string>>, callback?: ?(errors: ?Array<Error>) => void)", 
            "contents": "AsyncStorage.multiMerge(keyValuePairs: Array<Array<string>>, callback?: ?(errors: ?Array<Error>) => void)"
        }
    ]
}